# Reroute www.website.com to website.com
# Reroute https:// to http:// for www.website.com, this lets the reroute kick in!
#server {
#    listen 80;
#    listen 443;
#
#    server_name www.website.com;
#    # $scheme will get the http protocol
#    # and 301 is best practice for tablet, phone, desktop and seo
#    return 301 $scheme://website.com$request_uri;
#    #rewrite ^ https://$server_name$request_uri? permanent;
#}

server {
    listen 80;
    #listen 443 default ssl spdy; # Enable https

    server_name localhost.com;
    root /var/www/;
    sendfile off;
    client_max_body_size 10M;

    # Rewrite to https
    #if ($ssl_protocol = "") {
    #    rewrite ^ https://$server_name$request_uri? permanent;
    #}

    index index.html;

    location / {
        #rewrite ^/admin$ /admin/ permanent; # Example rewrite dir
    }

    # Example dir location
    #location /admin/ {
    #    error_page 404 =200 /admin/;
    #    try_files $uri.html $uri $uri/ =404;
    #}

    # Caching for images, disabled here since we are on development
    #location ~* \.(?:ico|css|js|gif|jpe?g|png)$ {
    #    expires 30d;
    #    add_header Pragma public;
    #    add_header Cache-Control "public";
    #}

    # HTTPS proxying for HTTP content
    # http://nginx.org/en/docs/http/ngx_http_proxy_module.html

    # SSL Configuration Example
    # ssl on; # Commented out because we need to accept port 80
    #ssl_certificate /etc/nginx/ssl/ssl-unified.crt;
    #ssl_certificate_key /etc/nginx/ssl/ssl.key;


    # Set SSL protocols, Remove SSLv3 which has the POODLE vulnerability
    #ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
}
